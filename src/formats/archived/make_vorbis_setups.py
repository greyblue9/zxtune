import os
import re
import sys
from pathlib import Path

FILE_PATTERN = re.compile(r'.+fvs_([0-9a-f]{8})')

def read_fvs(folder):
  entries = {}
  for entry in os.scandir(folder):
    if not entry.is_file():
      print(f'Skip {entry.path}', file=sys.stderr)
      continue
    match = FILE_PATTERN.match(entry.name)
    if not match:
      continue
    crc = match.group(1)
    with open(entry.path, 'rb') as fp:
      entries[crc] = fp.read()
  return entries

def dump_bin(blob, output):
  print('"', file=output, end='')
  for b in blob:
    print('\\x%02x' % int(b), file=output, end='')
  print('"', file=output, end='')

def dump_fvs(fvs, output):
  print(f"// This file is autogenerated\n// {len(fvs)} entries", file=output)
  for crc in sorted(fvs.keys()):
    print(f"{{0x{crc},", file=output, end='')
    dump_bin(fvs[crc], output)
    print("_sv},", file=output)

if __name__ == '__main__':
  fvs = read_fvs(sys.argv[1])
  dump_fvs(fvs, sys.stdout)
